name: Terraform Format Workflow

# Trigger the workflow on pull requests
on:
  # Trigger the workflow on new pull requests or when existing ones are updated
  pull_request:
    types: [opened, synchronize]

# Set permissions for write access to repository contents
permissions:
  contents: write

# Define concurrency settings for the workflow to keep all runs even if a new one is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  terraform_format:
    name: Terraform Format
    # Operating system for job execution
    runs-on: ubuntu-latest

    # Default settings for all steps in the job
    defaults:
      run:
        shell: bash

    steps:
      # Use the checkout action to clone the repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch complete history to enable checking for changed files
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
        # persist-credentials: false # Do not persist credentials to avoid storing them in the workspace

      # Step to set up Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Step to format Terraform configuration files
      - name: Terraform Format
        run: terraform fmt

      # Step to verify if any Terraform files have changed
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v19
        id: verify-changed-files
        with:
          files: |
            *.tf
            **/*.tf

      # Step to run when any Terraform files have changed
      - name: Run step only when any of the above files change.
        if: steps.verify-changed-files.outputs.files_changed == 'true' # Condition to check if files have changed
        env:
          CHANGED_FILES: ${{ steps.verify-changed-files.outputs.changed_files }}
        run: |
          echo "Changed Terraform files: $CHANGED_FILES"

      # Step to commit changes when Terraform files have changed
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        if: steps.verify-changed-files.outputs.files_changed == 'true' # Condition to check if files have changed
        with:
          message: "chore: Terraform Format Applied"
          add: "*.tf"
